{
  "_args": [
    [
      "netflux@0.8.1",
      "/home/sinteff/workspace/netflux-chat"
    ]
  ],
  "_from": "netflux@0.8.1",
  "_id": "netflux@0.8.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/netflux",
  "_nodeVersion": "6.2.2",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/netflux-0.8.1.tgz_1467211407013_0.9638934887479991"
  },
  "_npmUser": {
    "email": "philippe.kalitine@gmail.com",
    "name": "kalitine"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "name": "netflux",
    "raw": "netflux@0.8.1",
    "rawSpec": "0.8.1",
    "scope": null,
    "spec": "0.8.1",
    "type": "version"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/netflux/-/netflux-0.8.1.tgz",
  "_shasum": "0bf8e658cc7edcd3e1e370906fd4c6787f2cc216",
  "_shrinkwrap": null,
  "_spec": "netflux@0.8.1",
  "_where": "/home/sinteff/workspace/netflux-chat",
  "author": {
    "email": "philippe.kalitine@gmail.com",
    "name": "Philippe Kalitine",
    "url": "http://philippe.kalitine.name/"
  },
  "bugs": {
    "url": "https://github.com/coast-team/netflux/issues"
  },
  "config": {
    "commitizen": {
      "path": "node_modules/cz-conventional-changelog"
    },
    "ghooks": {
      "pre-commit": "npm run test-coverage"
    }
  },
  "dependencies": {
    "webrtc-adapter": "^1.1.0"
  },
  "description": "Abstract peer to peer client transport API. Implementations based on WebRTC and webSocket to be done.",
  "devDependencies": {
    "commitizen": "^2.4.6",
    "cz-conventional-changelog": "^1.1.5",
    "eslint": "^2.2.0",
    "ghooks": "^1.0.1",
    "ink-docstrap": "^1.1.2",
    "istanbul": "^0.4.3",
    "jasmine-core": "^2.4.1",
    "jsdoc": "^3.4.0",
    "json": "^9.0.3",
    "karma": "^1.1.0",
    "karma-chrome-launcher": "^1.0.1",
    "karma-coverage": "^1.0.0",
    "karma-coverage-es6": "^0.2.7",
    "karma-firefox-launcher": "^1.0.0",
    "karma-jasmine": "^1.0.2",
    "karma-rollup-preprocessor": "^2.0.2",
    "rollup": "^0.33.0",
    "rollup-plugin-filesize": "^0.4.4",
    "rollup-plugin-istanbul": "^1.0.0",
    "rollup-plugin-string": "^2.0.0",
    "semantic-release": "^4.3.5",
    "sigver": "^7.1.0",
    "standard": "^7.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "0bf8e658cc7edcd3e1e370906fd4c6787f2cc216",
    "tarball": "https://registry.npmjs.org/netflux/-/netflux-0.8.1.tgz"
  },
  "gitHead": "ba5ade65e85fabf6d5956e77dcd6970ee497a728",
  "homepage": "https://github.com/coast-team/netflux#readme",
  "jsnext:main": "dist/netflux.es2015.js",
  "keywords": [
    "netflux",
    "webRTC",
    "p2p",
    "peer",
    "network"
  ],
  "license": "AGPL-3.0",
  "main": "dist/netflux.es2015.umd.js",
  "maintainers": [
    {
      "email": "philippe.kalitine@gmail.com",
      "name": "kalitine"
    }
  ],
  "name": "netflux",
  "optionalDependencies": {},
  "readme": "ERROR: No README data found!",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/coast-team/netflux.git"
  },
  "scripts": {
    "build": "rollup -c & rollup -i src/index.js -o dist/netflux.es2015.js",
    "commit": "git-cz",
    "doc": "jsdoc -d doc -c jsdoc.json -t ./node_modules/ink-docstrap/template -R README.md -r src",
    "docdeploy": "./jsdoc.deploy.sh",
    "docdev": "jsdoc -d doc -p -c jsdoc.json -t ./node_modules/ink-docstrap/template -R README.md -r src",
    "postdoc": "mkdir -p doc/doc && cp -f doc/uml.png doc/doc/",
    "postdocdeploy": "json -I -f jsdoc.json -e 'this.templates.systemName=\"Netflux\"'",
    "postdocdev": "mkdir -p doc/doc && cp -f doc/uml.png doc/doc/",
    "prebuild": "rm -rf coverage dist",
    "predocdeploy": "json -I -f jsdoc.json -e \"this.templates.systemName=\\\"Netflux `git describe --abbrev=0 --tags`\\\"\" && npm run docdev",
    "pretest": "npm run build && npm run signalling-up",
    "semantic-release": "semantic-release pre && npm publish && semantic-release post",
    "signalling-up": "kill `cat /tmp/sigver.pid`; node ./node_modules/sigver/server.js & echo \"$!\" > /tmp/sigver.pid",
    "test": "karma start",
    "test-coverage": "npm run test -- karma.conf.coverage.js",
    "testin": "npm run test -- --browsers"
  },
  "standard": {
    "globals": [
      "netflux",
      "describe",
      "xdescribe",
      "it",
      "xit",
      "expect",
      "beforeEach",
      "afterEach",
      "beforeAll",
      "afterAll",
      "DOMException",
      "RTCPeerConnection",
      "RTCSessionDescription",
      "RTCDataChannel",
      "RTCIceCandidate",
      "WebSocket",
      "TextEncoder",
      "TextDecoder",
      "Event",
      "CloseEvent"
    ],
    "ignore": [
      "dist/*",
      "karma*.js",
      "*config.js"
    ],
    "parser": "babel-eslint"
  },
  "version": "0.8.1"
}
